{"version":3,"sources":["components/SearchCategory.js","helpers/giphyHelper.js","components/CategoryItem.js","components/CategoryList.js","hooks/useFecthGifs.js","App.js","index.js"],"names":["SearchCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","requestToGiphy","category","a","url","encodeURI","fetch","response","json","data","gifs","map","image","id","title","images","downsized_medium","CategoryItem","className","src","alt","CategoryList","loading","state","setState","useEffect","then","console","log","catch","error","useFetchGifs","App","idx","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAU,IAFE,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBjD,OACI,sBACIC,SAZa,SAAAC,GACjBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAe,MAMnB,SAII,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAvBc,SAAAP,GAEtBF,EAAeE,EAAMQ,OAAOF,a,+BCTvBG,EAAc,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEtBC,EAFsB,iDAE2BC,UAAWH,GAFtC,8DAGLI,MAAOF,GAHF,cAGtBG,EAHsB,gBAILA,EAASC,OAJJ,uBAIpBC,EAJoB,EAIpBA,KAGAC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbV,IAAG,UAAEQ,EAAMG,cAAR,aAAE,EAAcC,iBAAiBZ,QAXlB,kBAenBM,GAfmB,4CAAH,sDCEdO,EAAe,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACnC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,EAAQA,MAAQA,IACvC,6BAAMA,QCGLO,EAAe,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHlB,SAAEA,GAAe,IAAD,EAEZd,mBAAS,CACjCkC,SAAS,EACTb,KAAM,KAJ8B,mBAEhCc,EAFgC,KAEzBC,EAFyB,KAqBxC,OAdAC,qBAAW,WACPxB,EAAgBC,GACXwB,MAAM,SAAAhB,GAEHc,EAAS,CACLF,SAAS,EACTb,KAAMC,IAEViB,QAAQC,IAAKlB,MAGhBmB,OAAO,SAAAC,GAAK,OAAIH,QAAQC,SAC9B,CAAE1B,IAEEqB,EDhB0BQ,CAAc7B,GAAvCoB,EAFkC,EAElCA,QAAcP,EAFoB,EAEzBN,KAEjB,OACI,qCACI,6BAAMP,IAEFoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEf,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAK,OACb,cAAC,EAAD,eAESA,GADCA,EAAMC,aEQzBmB,EAxBH,WAAO,IAAD,EAEwB5C,mBAClC,CAAE,qBAHQ,mBAENQ,EAFM,KAEMT,EAFN,KAMd,OACI,qCACI,8CACA,cAAC,EAAD,CAAgBA,cAAgBA,IAChC,uBAEIS,EAAWe,KAAK,SAAET,EAAU+B,GAAZ,OACZ,cAAC,EAAD,CAEI/B,SAAWA,GAFf,UACc+B,EADd,YACuB/B,WCX3CgC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23ad5a57.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SearchCategory = ({ setCategories }) => {\r\n\r\n    const [ inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = event => {\r\n        // console.log( event.target.value );\r\n        setInputValue( event.target.value );\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [ inputValue, ...categories ] );\r\n            setInputValue( '' );\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={ handleSubmit }\r\n        >\r\n            {/* <pre>{ JSON.stringify( inputValue, null, 4 ) }</pre> */}\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nSearchCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const requestToGiphy = async ( category ) => {    //  https://developers.giphy.com/\r\n    const \r\n        url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=9&api_key=6t2zjzJn3x3LILIFUpF6GKKcR95JTJhK`,\r\n        response = await fetch( url ),\r\n        { data } = await response.json();\r\n    // console.log( data );\r\n\r\n    const gifs = data.map( image => {\r\n        return {\r\n            id: image.id,\r\n            title: image.title,\r\n            url: image.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\n\nexport const CategoryItem = ( { title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__bounceIn\">\n            <img src={ url } alt={ title } title={ title } />        \n            <h4>{ title }</h4>\n        </div>\n   )\n}","import React from 'react';\n\n/** Hooks */\nimport { useFetchGifs } from '../hooks/useFecthGifs';\n\n/** Component */\nimport { CategoryItem } from './CategoryItem';\n\n/** Functional Components */\nexport const CategoryList = ({ category }) => {\n\n    const { loading, data:images } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            {   loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n\n            <div className=\"card-grid\">\n            \n                {   images.map( image => (\n                        <CategoryItem \n                            key={ image.id }\n                            { ...image }    //  Spread\n                        />\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\r\n\r\n/** Helper */\r\nimport { requestToGiphy } from '../helpers/giphyHelper';\r\n\r\n/** Custom Hook */\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        loading: true,\r\n        data: []\r\n    });\r\n\r\n    useEffect( () => {\r\n        requestToGiphy( category )\r\n            .then( gifs => {\r\n\r\n                setState({\r\n                    loading: false,\r\n                    data: gifs\r\n                });\r\n                console.log( gifs );\r\n\r\n            })\r\n            .catch( error => console.log );\r\n    }, [ category ] );\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\n\n/** Component */\nimport { SearchCategory } from './components/SearchCategory';\nimport { CategoryList } from './components/CategoryList';\n\n/** Functional Component */\nconst App = () => {\n\n    const [ categories, setCategories ] = useState(\n        [ 'Once upon a time' ]\n    );\n\n    return (  \n        <>\n            <h2>GifExpertApp</h2>\n            <SearchCategory setCategories={ setCategories } />\n            <hr />\n\n            {   categories.map( ( category, idx ) => (\n                    <CategoryList \n                        key={ `${ idx }-${ category }`} \n                        category={ category } \n                    />\n                )) \n            }\n        \n        </>\n    );\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/** Global Styles */\nimport './index.css';\nimport '../node_modules/animate.css/animate.min.css'; \n\n/** Components */\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}